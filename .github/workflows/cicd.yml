name: CI/CD Builds

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md

jobs:
  python_build_and_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - 3.7
          - 3.8
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipx and poetry
        run: |
          python3 -m pip install pipx
          python3 -m pipx ensurepath
          pipx install poetry
      - name: Install logless
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: |
      #     pytest

  pypi_publish:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - 3.7
          - 3.8
    needs:
      - python_build_and_test
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python (v${{ matrix.python-version }})
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipx and poetry
        run: |
          python3 -m pip install pipx
          python3 -m pipx ensurepath
          pipx install poetry
      - name: Push to PyPi (https://pypi.org/project/logless/)
        env:
          BRANCH_NAME: ${{ github.ref }}
          PYPI_USER: ${{ secrets.PYPI_USER }}
          PYPI_PASS: ${{ secrets.PYPI_SECRET }}
        run: |
          poetry version --short
          poetry version $(poetry version --short).$GITHUB_RUN_NUMBER
          poetry version --short
          echo -e "\nPublishing to version ref '$(poetry version --short)'...\n\n"
          poetry config http-basic.pypi -u $PYPI_USER -p $PYPI_PASS
          poetry publish --build
      - name: Sleep before install
        run: |
          sleep 60
      - name: Test install (pip install logless)
        run: |
          pip install --no-cache-dir logless==$(poetry version --short)
      - name: Test uninstall (pip uninstall logless)
        run: |
          pip uninstall -y logless
